% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pivot.R
\name{closure_pivot_longer}
\alias{closure_pivot_longer}
\title{Pivot CLOSURE data from wide to long}
\usage{
closure_pivot_longer(data, cols_vary = c("slowest", "fastest"))
}
\arguments{
\item{data}{Data frame returned by \code{\link[=closure_combine]{closure_combine()}}.}

\item{cols_vary}{String (length 1). How to arrange rows?
\itemize{
\item If \code{"slowest"}, the default, values from the same original \code{"n"} columns
are kept together.
\item If \code{"fastest"}, the combinations (or rows in the original \code{data}) are kept
together, so that \code{"n"} varies after each row.
}}
}
\value{
Tibble (data frame) with two columns:
\itemize{
\item \code{"n"}: integer. Numbers from the column names of \code{data}, like \code{1} for
\code{"n1"}, \code{2} for \code{"n2"}, etc.
\item \code{"value"}: integer. Combination components, i.e., all values from \code{data}.
}
}
\description{
Data coming from \code{\link[=closure_combine]{closure_combine()}} can be reshaped using
\code{closure_pivot_longer()}. This turns CLOSURE output into tidy data.

It is a wrapper around \code{\link[tidyr:pivot_longer]{tidyr::pivot_longer()}} tailored to CLOSURE data.
}
\details{
The present function differs from \code{\link[tidyr:pivot_longer]{tidyr::pivot_longer()}} in these
ways:
\itemize{
\item It checks whether \code{data} are CLOSURE output.
\item It always includes all columns.
\item By default (\code{cols_vary = "slowest"}), it clusters the output by the
original columns, such as \code{"n1"} and \code{"n2"}. This preserves the natural
grouping of the data.
\item It transforms the \code{"n"} column to integer, like \code{1} for \code{"n1"} and \code{2} for
\code{"n2"}. The \code{"n"} prefix would be redundant and distract from the numeric
values.
\item It adds the \code{"closure_pivot_longer"} class to the output. This will inform
downstream functions, such as \code{\link[=closure_summarize]{closure_summarize()}} and
\code{\link[=closure_plot]{closure_plot()}}.
}
}
